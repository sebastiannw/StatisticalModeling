vgsales[vgsales$user_score == 'tbd',]$user_score <- NA
vgsales <- vgsales[!is.na(vgsales$critic_score),]
vgsales <- vgsales[!is.na(vgsales$user_score),]
vgsales$user_score <- as.numeric(vgsales$user_score)
vgsales$log_global_sales <- log(vgsales$global_sales)
vgsales$critic_score_c <- vgsales$critic_score - mean(vgsales$critic_score)
vgsales$critic_count_c <- vgsales$critic_count - mean(vgsales$critic_count)
vgsales$user_score_c <- vgsales$user_score - mean(vgsales$user_score)
vgsales$user_count_c <- vgsales$user_count - mean(vgsales$user_count)
vgsales$hit <- 0
vgsales[vgsales$global_sales > 1,]$hit <- 1
vgsales$platform_company <- 'Sony'
vgsales[
vgsales$platform == '3DS'
| vgsales$platform == 'DS'
| vgsales$platform == 'GB'
| vgsales$platform == 'GBA'
| vgsales$platform == 'GC'
| vgsales$platform == 'N64'
| vgsales$platform == 'Wii'
| vgsales$platform == 'WiiU',
]$platform_company <- 'Nintendo'
vgsales[vgsales$platform == 'DC',]$platform_company <- 'Sega'
vgsales[vgsales$platform == 'PC',]$platform_company <- 'PC'
#vgsales[vgsales$platform == 'WS',]$platform_company <- 'Bandai'
vgsales[
vgsales$platform == 'X360'
| vgsales$platform == 'XB'
| vgsales$platform == 'XOne',
]$platform_company <- 'Microsoft'
vgsales$platform_company <- as.factor(vgsales$platform_company)
summary(vgsales)
ggplot(data = sample_data, aes(x = critic_score, y = log_global_sales)) + geom_point(color = 'gold') +
geom_smooth(method = lm, color = 'darkgray') + theme_minimal()
ggplot(data = sample_data, aes(x = critic_count, y = log_global_sales)) + geom_point(color = 'darkblue') +
geom_smooth(method = lm, color = 'darkgray') + theme_minimal()
ggplot(data = sample_data, aes(x = user_score, y = log_global_sales)) + geom_point(color = 'darkred') +
geom_smooth(method = lm, color = 'darkgray') + theme_minimal()
ggplot(data = sample_data, aes(x = user_count, y = log_global_sales)) + geom_point(color = 'darkgreen') +
geom_smooth(method = lm, color = 'darkgray') + theme_minimal()
ggplot(data = sample_data, aes(x = rating, y = log_global_sales, fill = rating)) + geom_point(color = 'darkgreen') +
geom_smooth(method = lm, color = 'darkgray') + theme_minimal()
vgsales <- read.csv('vgsales.csv')
vgsales$Year_of_Release <- year(as.Date(as.character(vgsales$Year_of_Release), format = '%Y'))
colnames(vgsales) <- c('name', 'platform', 'year_of_release', 'genre', 'publisher', 'na_sales',
'eu_sales', 'jp_sales', 'other_sales', 'global_sales', 'critic_score',
'critic_count', 'user_score', 'user_count', 'developer', 'rating')
vgsales[vgsales$user_score == '',]$user_score <- 'tbd'
vgsales[vgsales$user_score == 'tbd',]$user_score <- NA
vgsales <- vgsales[!is.na(vgsales$critic_score),]
vgsales <- vgsales[!is.na(vgsales$user_score),]
vgsales$user_score <- as.numeric(vgsales$user_score)
vgsales$log_global_sales <- log(vgsales$global_sales)
vgsales$critic_score_c <- vgsales$critic_score - mean(vgsales$critic_score)
vgsales$critic_count_c <- vgsales$critic_count - mean(vgsales$critic_count)
vgsales$user_score_c <- vgsales$user_score - mean(vgsales$user_score)
vgsales$user_count_c <- vgsales$user_count - mean(vgsales$user_count)
vgsales$hit <- 0
vgsales[vgsales$global_sales > 1,]$hit <- 1
vgsales$platform_company <- 'Sony'
vgsales[
vgsales$platform == '3DS'
| vgsales$platform == 'DS'
| vgsales$platform == 'GB'
| vgsales$platform == 'GBA'
| vgsales$platform == 'GC'
| vgsales$platform == 'N64'
| vgsales$platform == 'Wii'
| vgsales$platform == 'WiiU',
]$platform_company <- 'Nintendo'
vgsales[vgsales$platform == 'DC',]$platform_company <- 'Sega'
vgsales[vgsales$platform == 'PC',]$platform_company <- 'PC'
#vgsales[vgsales$platform == 'WS',]$platform_company <- 'Bandai'
vgsales[
vgsales$platform == 'X360'
| vgsales$platform == 'XB'
| vgsales$platform == 'XOne',
]$platform_company <- 'Microsoft'
vgsales$platform_company <- as.factor(vgsales$platform_company)
vgsales$rating_everyone <- 0
vgsales[vgsales$rating == 'E',]$rating_everyone <- 1
vgsales$rating_everyone <- as.factor(vgsales$rating_everyone)
summary(vgsales)
full_model <- lmer(formula = log_global_sales
~ platform_company + genre + rating_everyone
+ critic_score + critic_count + user_score + user_count
+ platform_company:rating_everyone
+ (1 | publisher),
data = sample_data)
knitr::opts_chunk$set(echo = TRUE)
library(arm); library(pROC); library(e1071); library(caret); library(knitr)
library(rms); library(ggplot2); library(lme4); library(rstan); library(brms)
library(sjPlot); library(dplyr); library(kableExtra); library(formatR); library(ggfortify)
library(quantreg); library(gridExtra); library(Hmisc); library(corrplot); library(GGally)
library(psych); library(car); library(huxtable); library(stargazer); library(DataExplorer)
library(GGally); library(MASS); library(data.table); library(tidyverse); library(lmerTest)
library(ggpubr); library(reshape2); library(mice); library(naniar); library(cobalt)
library(MatchIt); library(randomForest); library(MuMIn)
rb <- c('red', 'orange', 'yellow', 'green', 'blue', 'purple')
vif.mer <- function(fit){
## adapted from rms::vif
v <- vcov(fit)
nam <- names(fixef(fit))
## exclude intercepts
ns <- sum(1 * (nam == "Intercept" | nam == "(Intercept)"))
if(ns > 0){
v <- v[-(1:ns), -(1:ns), drop = FALSE]
nam <- nam[-(1:ns)]
}
d <- diag(v)^0.5
v <- diag(solve(v / (d %o% d)))
names(v) <- nam
v
}
vgsales <- read.csv('vgsales.csv')
vgsales$Year_of_Release <- year(as.Date(as.character(vgsales$Year_of_Release), format = '%Y'))
colnames(vgsales) <- c('name', 'platform', 'year_of_release', 'genre', 'publisher', 'na_sales',
'eu_sales', 'jp_sales', 'other_sales', 'global_sales', 'critic_score',
'critic_count', 'user_score', 'user_count', 'developer', 'rating')
vgsales[vgsales$user_score == '',]$user_score <- 'tbd'
vgsales[vgsales$user_score == 'tbd',]$user_score <- NA
vgsales <- vgsales[!is.na(vgsales$critic_score),]
vgsales <- vgsales[!is.na(vgsales$user_score),]
vgsales$user_score <- as.numeric(vgsales$user_score)
vgsales$log_global_sales <- log(vgsales$global_sales)
vgsales$critic_score_c <- vgsales$critic_score - mean(vgsales$critic_score)
vgsales$critic_count_c <- vgsales$critic_count - mean(vgsales$critic_count)
vgsales$user_score_c <- vgsales$user_score - mean(vgsales$user_score)
vgsales$user_count_c <- vgsales$user_count - mean(vgsales$user_count)
vgsales$hit <- 0
vgsales[vgsales$global_sales > 1,]$hit <- 1
vgsales$platform_company <- 'Sony'
vgsales[
vgsales$platform == '3DS'
| vgsales$platform == 'DS'
| vgsales$platform == 'GB'
| vgsales$platform == 'GBA'
| vgsales$platform == 'GC'
| vgsales$platform == 'N64'
| vgsales$platform == 'Wii'
| vgsales$platform == 'WiiU',
]$platform_company <- 'Nintendo'
vgsales[vgsales$platform == 'DC',]$platform_company <- 'Sega'
vgsales[vgsales$platform == 'PC',]$platform_company <- 'PC'
#vgsales[vgsales$platform == 'WS',]$platform_company <- 'Bandai'
vgsales[
vgsales$platform == 'X360'
| vgsales$platform == 'XB'
| vgsales$platform == 'XOne',
]$platform_company <- 'Microsoft'
vgsales$platform_company <- as.factor(vgsales$platform_company)
vgsales$rating_everyone <- 0
vgsales[vgsales$rating == 'E',]$rating_everyone <- 1
vgsales$rating_everyone <- as.factor(vgsales$rating_everyone)
summary(vgsales)
#Selecting 50 sample publishers
publishers <- unique(vgsales$publisher)
set.seed(2163386)
sample_publishers<- sample(publishers, 50)
sample_data <- vgsales[vgsales$publisher %in% sample_publishers,]
ggplot(data = sample_data, aes(x = global_sales)) +
geom_histogram(color = 'black', fill = rainbow(20), bins = 20) +
theme_minimal()
ggplot(data = sample_data, aes(x = log_global_sales)) +
geom_histogram(color = 'black', fill = rainbow(20), bins = 20) +
theme_minimal()
sample_data %>% subset(platform == '3DS') %>% ggplot(mapping = aes(x = genre, y = log_global_sales, fill = genre)) +
geom_boxplot() + theme_minimal() + theme(axis.text.x = element_blank()) + ggtitle('3DS')
sample_data %>% subset(platform == 'X360') %>% ggplot(mapping = aes(x = genre, y = log_global_sales, fill = genre)) +
geom_boxplot() + theme_minimal() + theme(axis.text.x = element_blank()) + ggtitle('XOne')
sample_data %>% subset(platform == 'Wii') %>% ggplot(mapping = aes(x = genre, y = log_global_sales, fill = genre)) +
geom_boxplot() + theme_minimal() + theme(axis.text.x = element_blank()) + ggtitle('Wii')
sample_data %>% subset(platform == 'PS3') %>% ggplot(mapping = aes(x = genre, y = log_global_sales, fill = genre)) +
geom_boxplot() + theme_minimal() + theme(axis.text.x = element_blank()) + ggtitle('PS3')
publishers_sample <- unique(sample_data$publisher)
set.seed(4057)
plot_publishers<- sample(publishers_sample, 5)
plot_publishers
plot_data <- sample_data[sample_data$publisher %in% plot_publishers,]
plot_data$publisher = factor(plot_data$publisher)
ggplot(data = plot_data, mapping = aes(x = publisher, y = log_global_sales, fill = publisher)) +
geom_boxplot() + theme_minimal() + theme(axis.text.x = element_blank())
sample_data %>% subset(platform %in% sample(unique(sample_data$platform), 10)) %>%
ggplot(mapping = aes(x = platform, y = log_global_sales, fill = platform)) +
geom_boxplot() + theme_minimal() + theme(axis.text.x = element_blank())
sample_data %>% subset(genre %in% sample(unique(sample_data$genre), 10)) %>%
ggplot(mapping = aes(x = genre, y = log_global_sales, fill = genre)) +
geom_boxplot() + theme_minimal() + theme(axis.text.x = element_blank())
sample_data %>% subset(developer %in% sample(unique(sample_data$developer), 10)) %>%
ggplot(mapping = aes(x = developer, y = log_global_sales, fill = developer)) +
geom_boxplot() + theme_minimal() + theme(axis.text.x = element_blank())
sample_data %>% subset(rating %in% c('E', 'E10+', 'T', 'M')) %>%
ggplot(mapping = aes(x = rating, y = log_global_sales, fill = rating)) +
geom_boxplot() + theme_minimal() + theme(axis.text.x = element_blank())
ggplot(data = sample_data, aes(x = critic_score, y = log_global_sales)) + geom_point(color = 'gold') +
geom_smooth(method = lm, color = 'darkgray') + theme_minimal()
ggplot(data = sample_data, aes(x = critic_count, y = log_global_sales)) + geom_point(color = 'darkblue') +
geom_smooth(method = lm, color = 'darkgray') + theme_minimal()
ggplot(data = sample_data, aes(x = user_score, y = log_global_sales)) + geom_point(color = 'darkred') +
geom_smooth(method = lm, color = 'darkgray') + theme_minimal()
ggplot(data = sample_data, aes(x = user_count, y = log_global_sales)) + geom_point(color = 'darkgreen') +
geom_smooth(method = lm, color = 'darkgray') + theme_minimal()
full_model <- lmer(formula = log_global_sales
~ platform_company + genre + rating_everyone
+ critic_score + critic_count + user_score + user_count
+ platform_company:rating_everyone
+ (1 | publisher),
data = sample_data)
r.squaredGLMM(full_model)
summary(full_model)
#bm_voting1_coeff <- summary(glm_vgsales)
#bm_voting1_coeff <- data.frame(bm_voting1_coeff)
#bm_voting1_coeff$Std..Error <- NULL
#bm_voting1_coeff$Odds <- exp(bm_voting1_coeff$Estimate)
#kable(round(bm_voting1_coeff, 2), caption = "Model's Fixed Coefficients.", row.names = TRUE,
#label = "tables", format = "latex", booktabs = TRUE) %>% kable_styling(
#latex_options = "HOLD_position"
#)
vif.mer(full_model)
plot1 <- dotplot(ranef(full_model, condVar = TRUE), main = FALSE)
plot1$publisher
full_model <- lmer(formula = log_global_sales
~ platform_company + genre
+ critic_score + critic_count + user_score + user_count
+ platform_company:genre
+ (1 | publisher),
data = sample_data)
r.squaredGLMM(full_model)
summary(full_model)
#bm_voting1_coeff <- summary(glm_vgsales)
#bm_voting1_coeff <- data.frame(bm_voting1_coeff)
#bm_voting1_coeff$Std..Error <- NULL
#bm_voting1_coeff$Odds <- exp(bm_voting1_coeff$Estimate)
#kable(round(bm_voting1_coeff, 2), caption = "Model's Fixed Coefficients.", row.names = TRUE,
#label = "tables", format = "latex", booktabs = TRUE) %>% kable_styling(
#latex_options = "HOLD_position"
#)
vif.mer(full_model)
plot1 <- dotplot(ranef(full_model, condVar = TRUE), main = FALSE)
plot1$publisher
full_model <- lmer(formula = log_global_sales
~ platform_company + genre
+ critic_score_c + critic_count_c + user_score_c + user_count_c
+ platform_company:genre
+ (1 | publisher),
data = sample_data)
r.squaredGLMM(full_model)
summary(full_model)
#bm_voting1_coeff <- summary(glm_vgsales)
#bm_voting1_coeff <- data.frame(bm_voting1_coeff)
#bm_voting1_coeff$Std..Error <- NULL
#bm_voting1_coeff$Odds <- exp(bm_voting1_coeff$Estimate)
#kable(round(bm_voting1_coeff, 2), caption = "Model's Fixed Coefficients.", row.names = TRUE,
#label = "tables", format = "latex", booktabs = TRUE) %>% kable_styling(
#latex_options = "HOLD_position"
#)
vif.mer(full_model)
plot1 <- dotplot(ranef(full_model, condVar = TRUE), main = FALSE)
plot1$publisher
View(sample_data)
full_model <- lmer(formula = log_global_sales
~ relevel(platform_company, ref = 'Sega') + genre
+ critic_score_c + critic_count_c + user_score_c + user_count_c
+ platform_company:genre
+ (1 | publisher),
data = sample_data)
r.squaredGLMM(full_model)
summary(full_model)
#bm_voting1_coeff <- summary(glm_vgsales)
#bm_voting1_coeff <- data.frame(bm_voting1_coeff)
#bm_voting1_coeff$Std..Error <- NULL
#bm_voting1_coeff$Odds <- exp(bm_voting1_coeff$Estimate)
#kable(round(bm_voting1_coeff, 2), caption = "Model's Fixed Coefficients.", row.names = TRUE,
#label = "tables", format = "latex", booktabs = TRUE) %>% kable_styling(
#latex_options = "HOLD_position"
#)
vif.mer(full_model)
plot1 <- dotplot(ranef(full_model, condVar = TRUE), main = FALSE)
plot1$publisher
full_model <- lmer(formula = log_global_sales
~ relevel(platform_company, ref = 'PC') + genre
+ critic_score_c + critic_count_c + user_score_c + user_count_c
+ platform_company:genre
+ (1 | publisher),
data = sample_data)
r.squaredGLMM(full_model)
summary(full_model)
#bm_voting1_coeff <- summary(glm_vgsales)
#bm_voting1_coeff <- data.frame(bm_voting1_coeff)
#bm_voting1_coeff$Std..Error <- NULL
#bm_voting1_coeff$Odds <- exp(bm_voting1_coeff$Estimate)
#kable(round(bm_voting1_coeff, 2), caption = "Model's Fixed Coefficients.", row.names = TRUE,
#label = "tables", format = "latex", booktabs = TRUE) %>% kable_styling(
#latex_options = "HOLD_position"
#)
vif.mer(full_model)
plot1 <- dotplot(ranef(full_model, condVar = TRUE), main = FALSE)
plot1$publisher
full_model <- lmer(formula = log_global_sales
~ platform_company + genre
+ critic_score_c + critic_count_c + user_score_c + user_count_c
+ platform_company:genre
+ (1 | publisher),
data = sample_data)
r.squaredGLMM(full_model)
summary(full_model)
#bm_voting1_coeff <- summary(glm_vgsales)
#bm_voting1_coeff <- data.frame(bm_voting1_coeff)
#bm_voting1_coeff$Std..Error <- NULL
#bm_voting1_coeff$Odds <- exp(bm_voting1_coeff$Estimate)
#kable(round(bm_voting1_coeff, 2), caption = "Model's Fixed Coefficients.", row.names = TRUE,
#label = "tables", format = "latex", booktabs = TRUE) %>% kable_styling(
#latex_options = "HOLD_position"
#)
full_model <- lmer(formula = log_global_sales
~ platform_company + genre + rating_everyone
+ critic_score_c + critic_count_c + user_score_c + user_count_c
+ platform_company:rating_everyone
+ (1 | publisher),
data = sample_data)
r.squaredGLMM(full_model)
summary(full_model)
#bm_voting1_coeff <- summary(glm_vgsales)
#bm_voting1_coeff <- data.frame(bm_voting1_coeff)
#bm_voting1_coeff$Std..Error <- NULL
#bm_voting1_coeff$Odds <- exp(bm_voting1_coeff$Estimate)
#kable(round(bm_voting1_coeff, 2), caption = "Model's Fixed Coefficients.", row.names = TRUE,
#label = "tables", format = "latex", booktabs = TRUE) %>% kable_styling(
#latex_options = "HOLD_position"
#)
vif.mer(full_model)
plot1 <- dotplot(ranef(full_model, condVar = TRUE), main = FALSE)
plot1$publisher
full_model <- lmer(formula = log_global_sales
~ platform_company + genre + rating_everyone
+ critic_score_c + critic_count_c + user_count_c
+ platform_company:rating_everyone
+ (1 | publisher),
data = sample_data)
r.squaredGLMM(full_model)
summary(full_model)
#bm_voting1_coeff <- summary(glm_vgsales)
#bm_voting1_coeff <- data.frame(bm_voting1_coeff)
#bm_voting1_coeff$Std..Error <- NULL
#bm_voting1_coeff$Odds <- exp(bm_voting1_coeff$Estimate)
#kable(round(bm_voting1_coeff, 2), caption = "Model's Fixed Coefficients.", row.names = TRUE,
#label = "tables", format = "latex", booktabs = TRUE) %>% kable_styling(
#latex_options = "HOLD_position"
#)
vif.mer(full_model)
plot1 <- dotplot(ranef(full_model, condVar = TRUE), main = FALSE)
plot1$publisher
ctl = glmerControl(optimizer = 'bobyqa')
glm_model <- glmer(formula = hit
~ platform_company + genre + rating_everyone
+ critic_score + critic_count + user_score + user_count
+ platform_company:rating_everyone
+ (1 | publisher),
family = binomial(link = "logit"), control = ctl,  data = sample_data)
summary(glm_model)
#bm_voting1_coeff <- summary(bm_voting1)$coefficients
#bm_voting1_coeff <- data.frame(bm_voting1_coeff)
#bm_voting1_coeff$Std..Error <- NULL
#bm_voting1_coeff$Odds <- exp(bm_voting1_coeff$Estimate)
#kable(round(bm_voting1_coeff, 2), caption = "Model's Fixed Coefficients.", row.names = TRUE,
#label = "tables", format = "latex", booktabs = TRUE) %>% kable_styling(
#latex_options = "HOLD_position"
#)
ctl = glmerControl(optimizer = 'bobyqa')
glm_model <- glmer(formula = hit
~ platform_company + genre + rating_everyone
+ critic_score + critic_count + user_count
+ platform_company:rating_everyone
+ (1 | publisher),
family = binomial(link = "logit"), control = ctl,  data = sample_data)
summary(glm_model)
#bm_voting1_coeff <- summary(bm_voting1)$coefficients
#bm_voting1_coeff <- data.frame(bm_voting1_coeff)
#bm_voting1_coeff$Std..Error <- NULL
#bm_voting1_coeff$Odds <- exp(bm_voting1_coeff$Estimate)
#kable(round(bm_voting1_coeff, 2), caption = "Model's Fixed Coefficients.", row.names = TRUE,
#label = "tables", format = "latex", booktabs = TRUE) %>% kable_styling(
#latex_options = "HOLD_position"
#)
full_model <- lmer(formula = log_global_sales
~ platform_company + genre + rating_everyone
+ critic_score_c + critic_count_c + user_count_c
+ platform_company:rating_everyone
+ (1 | publisher),
data = sample_data)
r.squaredGLMM(full_model)
summary(full_model)
#bm_voting1_coeff <- summary(glm_vgsales)
#bm_voting1_coeff <- data.frame(bm_voting1_coeff)
#bm_voting1_coeff$Std..Error <- NULL
#bm_voting1_coeff$Odds <- exp(bm_voting1_coeff$Estimate)
#kable(round(bm_voting1_coeff, 2), caption = "Model's Fixed Coefficients.", row.names = TRUE,
#label = "tables", format = "latex", booktabs = TRUE) %>% kable_styling(
#latex_options = "HOLD_position"
#)
vif.mer(full_model)
plot1 <- dotplot(ranef(full_model, condVar = TRUE), main = FALSE)
plot1$publisher
plot(y = full_model$residual, x = sample_data$critic_score_c, xlab = "critic_score_c", ylab = "Residual")
full_model
View(full_model)
View(full_model)
resid(full_model)
plot(y = resid(full_model), x = sample_data$critic_score_c, xlab = "critic_score_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$critic_score_c, xlab = "critic_score_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$critic_count_c, xlab = "critic_count_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$user_count_c, xlab = "user_count_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$critic_score_c, xlab = "critic_score_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$critic_count_c, xlab = "critic_count_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$user_count_c, xlab = "user_count_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$platform_company, xlab = "platform_company", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$critic_score_c, xlab = "critic_score_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$critic_count_c, xlab = "critic_count_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$user_count_c, xlab = "user_count_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$platform_company, xlab = "platform_company", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$genre, xlab = "genre", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$rating_everyone, xlab = "rating_everyone", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$critic_score_c, xlab = "critic_score_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$critic_count_c, xlab = "critic_count_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$user_count_c, xlab = "user_count_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$platform_company, xlab = "platform_company", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$genre, xlab = "genre", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$rating_everyone, xlab = "rating_everyone", ylab = "Residual")
abline(0,0)
plot(full_model, which = 1)
plot(y = resid(full_model), x = sample_data$critic_score_c, xlab = "critic_score_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$critic_count_c, xlab = "critic_count_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$user_count_c, xlab = "user_count_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$platform_company, xlab = "platform_company", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$genre, xlab = "genre", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$rating_everyone, xlab = "rating_everyone", ylab = "Residual")
abline(0,0)
plot(full_model, which = 1)
plot(full_model, which = 2)
plot(y = resid(full_model), x = sample_data$critic_score_c, xlab = "critic_score_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$critic_count_c, xlab = "critic_count_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$user_count_c, xlab = "user_count_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$platform_company, xlab = "platform_company", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$genre, xlab = "genre", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$rating_everyone, xlab = "rating_everyone", ylab = "Residual")
abline(0,0)
plot(full_model, which = 1)
qqnorm(resid(full_model))
qqline(resid(full_model))
plot(y = resid(full_model), x = sample_data$critic_score_c, xlab = "critic_score_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$critic_count_c, xlab = "critic_count_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$user_count_c, xlab = "user_count_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$platform_company, xlab = "platform_company", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$genre, xlab = "genre", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$rating_everyone, xlab = "rating_everyone", ylab = "Residual")
abline(0,0)
plot(full_model, which = 1)
plot(full_model)
qqnorm(resid(full_model))
qqline(resid(full_model))
plot(y = resid(full_model), x = sample_data$critic_score_c, xlab = "critic_score_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$critic_count_c, xlab = "critic_count_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$user_count_c, xlab = "user_count_c", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$platform_company, xlab = "platform_company", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$genre, xlab = "genre", ylab = "Residual")
abline(0,0)
plot(y = resid(full_model), x = sample_data$rating_everyone, xlab = "rating_everyone", ylab = "Residual")
abline(0,0)
plot(full_model, which = 1)
qqnorm(resid(full_model))
qqline(resid(full_model))
vif.mer(full_model)
plot1 <- dotplot(ranef(full_model, condVar = TRUE), main = FALSE)
plot1$publisher
