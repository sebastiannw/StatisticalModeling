model6 <- lmer(formula = log_global_sales
~ platform_company + genre + rating_everyone
+ critic_score_c + critic_count_c + user_score_c
+ (1 | publisher),
data = sample_data)
r.squaredGLMM(model6)
summary(model6)
anova(model5, model6)
print('model7')
model7 <- lmer(formula = log_global_sales
~ platform_company + genre + rating_everyone
+ critic_score_c + critic_count_c + user_score_c + user_count_c
+ (1 | publisher),
data = sample_data)
r.squaredGLMM(model7)
summary(model7)
anova(model6, model7)
print('model8')
model8 <- lmer(formula = log_global_sales
~ platform_company + genre + rating_everyone
+ critic_score_c + critic_count_c + user_count_c
+ platform_company:rating_everyone
+ (1 | publisher),
data = sample_data)
r.squaredGLMM(model8)
summary(model8)
anova(model7, model8)
print('model9')
model9 <- lmer(formula = log_global_sales
~ platform_company + genre + rating_everyone
+ critic_score_c + critic_count_c + user_count_c
+ platform_company:rating_everyone + platform_company:genre
+ (1 | publisher),
data = sample_data)
r.squaredGLMM(model9)
summary(model9)
anova(model8, model9)
print('model10')
model10 <- lmer(formula = log_global_sales
~ platform_company + genre + rating_everyone
+ critic_score_c + critic_count_c + user_count_c
+ platform_company:rating_everyone + platform_company:genre + genre:rating_everyone
+ (1 | publisher),
data = sample_data)
r.squaredGLMM(model10)
summary(model10)
anova(model9, model10)
print('full_model')
full_model <- lmer(formula = log_global_sales
~ platform_company + genre + rating_everyone
+ critic_score_c + critic_count_c + user_count_c
+ platform_company:rating_everyone + genre:rating_everyone
+ (1 | publisher),
data = sample_data)
r.squaredGLMM(full_model)
summary(full_model)
anova(model10, full_model)
confints <- confint(full_model)
confints <- confints[3:37,]
full_model_coefficients <- summary(full_model)$coefficients
full_model_coefficients <- data.frame(full_model_coefficients)
full_model_coefficients$Std..Error <- NULL
full_model_coefficients$df <- NULL
full_model_coefficients <- cbind(full_model_coefficients, confints)
full_model_coefficients$Sales <- exp(full_model_coefficients$Estimate)
kable(round(full_model_coefficients, 2), caption = "Model's Fixed Coefficients", row.names = TRUE,
label = "tables", format = "latex", booktabs = TRUE) %>% kable_styling(
latex_options = "HOLD_position"
)
ranefs <- ranef(full_model, condVar = TRUE)
plot_ranefs <- dotplot(ranefs, main = FALSE, scales = list(y = list(cex = 0.5)))
plot_ranefs$publisher
#print('vgsales')
#summary(vgsales)
print('sample_data')
summary(sample_data)
#Categorical
publishers_sample <- unique(sample_data$publisher)
set.seed(4057)
plot_publishers<- sample(publishers_sample, 5)
plot_data <- sample_data[sample_data$publisher %in% plot_publishers,]
plot_data$publisher = factor(plot_data$publisher)
ggplot(data = plot_data, mapping = aes(x = publisher, y = log_global_sales, fill = publisher)) +
geom_boxplot() + theme_minimal() + theme(axis.text.x = element_blank())
sample_data %>%
ggplot(mapping = aes(x = platform_company, y = log_global_sales, fill = platform_company)) +
geom_boxplot() + theme_minimal() + theme(axis.text.x = element_blank())
sample_data %>% subset(genre %in% sample(unique(sample_data$genre), 10)) %>%
ggplot(mapping = aes(x = genre, y = log_global_sales, fill = genre)) +
geom_boxplot() + theme_minimal() + theme(axis.text.x = element_blank())
sample_data %>% subset(developer %in% sample(unique(sample_data$developer), 10)) %>%
ggplot(mapping = aes(x = developer, y = log_global_sales, fill = developer)) +
geom_boxplot() + theme_minimal() + theme(axis.text.x = element_blank())
sample_data %>%
ggplot(mapping = aes(x = rating_everyone, y = log_global_sales, fill = rating_everyone)) +
geom_boxplot() + theme_minimal() + theme(axis.text.x = element_blank())
#Numerical
ggplot(data = sample_data, aes(x = critic_score, y = log_global_sales)) + geom_point(color = 'gold') +
geom_smooth(method = lm, color = 'darkgray') + theme_minimal()
ggplot(data = sample_data, aes(x = critic_count, y = log_global_sales)) + geom_point(color = 'darkblue') +
geom_smooth(method = lm, color = 'darkgray') + theme_minimal()
ggplot(data = sample_data, aes(x = user_score, y = log_global_sales)) + geom_point(color = 'darkred') +
geom_smooth(method = lm, color = 'darkgray') + theme_minimal()
ggplot(data = sample_data, aes(x = user_count, y = log_global_sales)) + geom_point(color = 'darkgreen') +
geom_smooth(method = lm, color = 'darkgray') + theme_minimal()
#Interactions
sample_data %>%
ggplot(mapping = aes(x = platform_company, y = log_global_sales, fill = rating_everyone)) +
geom_boxplot() + theme_minimal()
sample_data %>% subset(genre %in% sample(unique(sample_data$genre), 10)) %>%
ggplot(mapping = aes(x = genre, y = log_global_sales, fill = rating_everyone)) +
geom_boxplot() + theme_minimal()
sample_data %>% subset(platform_company == 'Nintendo') %>% ggplot(mapping = aes(x = genre, y = log_global_sales, fill = genre)) +
geom_boxplot() + theme_minimal() + theme(axis.text.x = element_blank()) + ggtitle('Nintendo')
sample_data %>% subset(platform_company == 'Microsoft') %>% ggplot(mapping = aes(x = genre, y = log_global_sales, fill = genre)) +
geom_boxplot() + theme_minimal() + theme(axis.text.x = element_blank()) + ggtitle('Microsoft')
sample_data %>% subset(platform_company == 'Sony') %>% ggplot(mapping = aes(x = genre, y = log_global_sales, fill = genre)) +
geom_boxplot() + theme_minimal() + theme(axis.text.x = element_blank()) + ggtitle('Sony')
sample_data %>% subset(platform_company == 'PC') %>% ggplot(mapping = aes(x = genre, y = log_global_sales, fill = genre)) +
geom_boxplot() + theme_minimal() + theme(axis.text.x = element_blank()) + ggtitle('PC')
gammas <- as.data.frame(ranefs$publisher) # rownames(gammas) <- NULL
gammas$totalcoef <- gammas[,1] + full_model_coefficients[1, 1]
gammas$oddsratios <- exp(gammas$totalcoef)
colnames(gammas) <- c("gamma", "log_global_sales Scale", "global_sales Scale")
kable(round(gammas[1:45,], 2), caption = "Random Effects for the Intercept by Publisher", row.names = TRUE,
label = "tables", format = "latex", booktabs = TRUE) %>% kable_styling(
latex_options = "HOLD_position"
)
gammas <- as.data.frame(ranefs$publisher) # rownames(gammas) <- NULL
gammas$totalcoef <- gammas[,1] + full_model_coefficients[1, 1]
gammas$oddsratios <- exp(gammas$totalcoef)
colnames(gammas) <- c("gamma", "log_global_sales", "global_sales")
kable(round(gammas[46:50,], 2), caption = "Random Effects for the Intercept by Publisher (continued)", row.names = TRUE,
label = "tables", format = "latex", booktabs = TRUE) %>% kable_styling(
latex_options = "HOLD_position"
)
vifs <- vif.mer(full_model)
kable(round(vifs, 2), caption = "Model's VIFs for the Fixed Effects", row.names = TRUE,
label = "tables", format = "latex", booktabs = TRUE) %>% kable_styling(
latex_options = "HOLD_position"
)
gammas <- as.data.frame(ranefs$publisher) # rownames(gammas) <- NULL
gammas$totalcoef <- gammas[,1] + full_model_coefficients[1, 1]
gammas$oddsratios <- exp(gammas$totalcoef)
colnames(gammas) <- c("gamma", "log_global_sales", "global_sales")
kable(round(gammas[46:50,], 2), caption = "Random Effects for the Intercept by Publisher (continued)", row.names = TRUE,
label = "tables", format = "latex", booktabs = TRUE) %>% kable_styling(
latex_options = "HOLD_position"
)
full_model_coefficients <- summary(full_model)$coefficients
full_model_coefficients <- data.frame(full_model_coefficients)
full_model_coefficients$Std..Error <- NULL
full_model_coefficients$df <- NULL
full_model_coefficients <- cbind(full_model_coefficients, confints)
full_model_coefficients$Sales <- exp(full_model_coefficients$Estimate)
kable(round(full_model_coefficients, 2), caption = "Model's Fixed Coefficients", row.names = TRUE,
label = "tables", format = "latex", booktabs = TRUE) %>% kable_styling(
latex_options = "HOLD_position"
)
summary(full_model)
# print('null_model')
# null_model <- lmer(formula = log_global_sales
#                 ~ (1 | publisher),
#                 data = sample_data)
# r.squaredGLMM(null_model)
# summary(null_model)
#
# print('model1')
# model1 <- lmer(formula = log_global_sales
#                ~ platform_company
#                + (1 | publisher),
#                data = sample_data)
# r.squaredGLMM(model1)
# summary(model1)
#
# anova(null_model, model1)
#
# print('model2')
# model2 <- lmer(formula = log_global_sales
#                ~ platform_company + genre
#                + (1 | publisher),
#                data = sample_data)
# r.squaredGLMM(model2)
# summary(model2)
#
# anova(model1, model2)
#
# print('model3')
# model3 <- lmer(formula = log_global_sales
#                ~ platform_company + genre + rating_everyone
#                + (1 | publisher),
#                data = sample_data)
# r.squaredGLMM(model3)
# summary(model3)
#
# anova(model2, model3)
#
# print('model4')
# model4 <- lmer(formula = log_global_sales
#                ~ platform_company + genre + rating_everyone
#                + critic_score_c
#                + (1 | publisher),
#                data = sample_data)
# r.squaredGLMM(model4)
# summary(model4)
#
# anova(model3, model4)
#
# print('model5')
# model5 <- lmer(formula = log_global_sales
#                ~ platform_company + genre + rating_everyone
#                + critic_score_c + critic_count_c
#                + (1 | publisher),
#                data = sample_data)
# r.squaredGLMM(model5)
# summary(model5)
#
# anova(model4, model5)
#
# print('model6')
# model6 <- lmer(formula = log_global_sales
#                ~ platform_company + genre + rating_everyone
#                + critic_score_c + critic_count_c + user_score_c
#                + (1 | publisher),
#                data = sample_data)
# r.squaredGLMM(model6)
# summary(model6)
#
# anova(model5, model6)
#
# print('model7')
# model7 <- lmer(formula = log_global_sales
#                ~ platform_company + genre + rating_everyone
#                + critic_score_c + critic_count_c + user_score_c + user_count_c
#                + (1 | publisher),
#                data = sample_data)
# r.squaredGLMM(model7)
# summary(model7)
#
# anova(model6, model7)
#
# print('model8')
# model8 <- lmer(formula = log_global_sales
#                ~ platform_company + genre + rating_everyone
#                + critic_score_c + critic_count_c + user_count_c
#                + platform_company:rating_everyone
#                + (1 | publisher),
#                data = sample_data)
# r.squaredGLMM(model8)
# summary(model8)
#
# anova(model7, model8)
#
# print('model9')
# model9 <- lmer(formula = log_global_sales
#                ~ platform_company + genre + rating_everyone
#                + critic_score_c + critic_count_c + user_count_c
#                + platform_company:rating_everyone + platform_company:genre
#                + (1 | publisher),
#                data = sample_data)
# r.squaredGLMM(model9)
# summary(model9)
#
# anova(model8, model9)
#
# print('model10')
# model10 <- lmer(formula = log_global_sales
#                 ~ platform_company + genre + rating_everyone
#                 + critic_score_c + critic_count_c + user_count_c
#                 + platform_company:rating_everyone + platform_company:genre + genre:rating_everyone
#                 + (1 | publisher),
#                 data = sample_data)
# r.squaredGLMM(model10)
# summary(model10)
#
# anova(model9, model10)
#
# print('full_model')
full_model <- lmer(formula = log_global_sales
~ platform_company + genre + rating_everyone
+ critic_score_c + critic_count_c + user_count_c
+ platform_company:rating_everyone + genre:rating_everyone
+ (1 | publisher),
data = sample_data)
r.squaredGLMM(full_model)
summary(full_model)
# anova(model10, full_model)
confints <- confint(full_model)
confints <- confints[3:37,]
r.squaredGLMM(full_model)
summary(full_model)
knitr::opts_chunk$set(echo = TRUE)
library(arm); library(pROC); library(e1071); library(caret); library(knitr)
library(rms); library(ggplot2); library(lme4); library(rstan); library(brms)
library(sjPlot); library(dplyr); library(kableExtra); library(formatR); library(ggfortify)
library(quantreg); library(gridExtra); library(Hmisc); library(corrplot); library(GGally)
library(psych); library(car); library(huxtable); library(stargazer); library(DataExplorer)
library(GGally); library(MASS); library(data.table); library(tidyverse); library(lmerTest)
library(ggpubr); library(reshape2); library(mice); library(naniar); library(cobalt)
library(MatchIt); library(randomForest); library(MuMIn)
rb <- c('red', 'orange', 'yellow', 'green', 'blue', 'purple')
vif.mer <- function(fit){
## adapted from rms::vif
v <- vcov(fit)
nam <- names(fixef(fit))
## exclude intercepts
ns <- sum(1 * (nam == "Intercept" | nam == "(Intercept)"))
if(ns > 0){
v <- v[-(1:ns), -(1:ns), drop = FALSE]
nam <- nam[-(1:ns)]
}
d <- diag(v)^0.5
v <- diag(solve(v / (d %o% d)))
names(v) <- nam
v
}
vgsales <- read.csv('vgsales.csv')
vgsales$Year_of_Release <- year(as.Date(as.character(vgsales$Year_of_Release), format = '%Y'))
colnames(vgsales) <- c('name', 'platform', 'year_of_release', 'genre', 'publisher', 'na_sales',
'eu_sales', 'jp_sales', 'other_sales', 'global_sales', 'critic_score',
'critic_count', 'user_score', 'user_count', 'developer', 'rating')
vgsales[vgsales$user_score == '',]$user_score <- 'tbd'
vgsales[vgsales$user_score == 'tbd',]$user_score <- NA
vgsales <- vgsales[!is.na(vgsales$critic_score),]
vgsales <- vgsales[!is.na(vgsales$user_score),]
vgsales$user_score <- as.numeric(vgsales$user_score)
vgsales$log_global_sales <- log(vgsales$global_sales)
vgsales$platform_company <- 'Sony'
vgsales[
vgsales$platform == '3DS'
| vgsales$platform == 'DS'
| vgsales$platform == 'GB'
| vgsales$platform == 'GBA'
| vgsales$platform == 'GC'
| vgsales$platform == 'N64'
| vgsales$platform == 'Wii'
| vgsales$platform == 'WiiU',
]$platform_company <- 'Nintendo'
vgsales[vgsales$platform == 'DC',]$platform_company <- 'Sega'
vgsales[vgsales$platform == 'PC',]$platform_company <- 'PC'
#vgsales[vgsales$platform == 'WS',]$platform_company <- 'Bandai'
vgsales[
vgsales$platform == 'X360'
| vgsales$platform == 'XB'
| vgsales$platform == 'XOne',
]$platform_company <- 'Microsoft'
vgsales$platform_company <- as.factor(vgsales$platform_company)
vgsales$rating_everyone <- 0
vgsales[vgsales$rating == 'E',]$rating_everyone <- 1
vgsales$rating_everyone <- as.factor(vgsales$rating_everyone)
#Selecting 50 sample publishers
publishers <- unique(vgsales$publisher)
set.seed(2163386)
sample_publishers<- sample(publishers, 50)
sample_data <- vgsales[vgsales$publisher %in% sample_publishers,]
sample_data$critic_score_c <- sample_data$critic_score - mean(sample_data$critic_score)
sample_data$critic_count_c <- sample_data$critic_count - mean(sample_data$critic_count)
sample_data$user_score_c <- sample_data$user_score - mean(sample_data$user_score)
sample_data$user_count_c <- sample_data$user_count - mean(sample_data$user_count)
par(mfrow = c(1, 2))
ggplot(data = sample_data, aes(x = global_sales)) +
geom_histogram(color = 'black', fill = rainbow(20), bins = 20) +
theme_minimal()
ggplot(data = sample_data, aes(x = log_global_sales)) +
geom_histogram(color = 'black', fill = rainbow(20), bins = 20) +
theme_minimal()
#Categorical
publishers_sample <- unique(sample_data$publisher)
set.seed(4057)
plot_publishers<- sample(publishers_sample, 5)
plot_data <- sample_data[sample_data$publisher %in% plot_publishers,]
plot_data$publisher = factor(plot_data$publisher)
ggplot(data = plot_data, mapping = aes(x = publisher, y = log_global_sales, fill = publisher)) +
geom_boxplot() + theme_minimal() + theme(axis.text.x = element_blank())
#Numerical
ggplot(data = sample_data, aes(x = critic_score, y = log_global_sales)) + geom_point(color = 'gold') +
geom_smooth(method = lm, color = 'darkgray') + theme_minimal()
#Interactions
sample_data %>%
ggplot(mapping = aes(x = platform_company, y = log_global_sales, fill = rating_everyone)) +
geom_boxplot() + theme_minimal()
# print('null_model')
# null_model <- lmer(formula = log_global_sales
#                 ~ (1 | publisher),
#                 data = sample_data)
# r.squaredGLMM(null_model)
# summary(null_model)
#
# print('model1')
# model1 <- lmer(formula = log_global_sales
#                ~ platform_company
#                + (1 | publisher),
#                data = sample_data)
# r.squaredGLMM(model1)
# summary(model1)
#
# anova(null_model, model1)
#
# print('model2')
# model2 <- lmer(formula = log_global_sales
#                ~ platform_company + genre
#                + (1 | publisher),
#                data = sample_data)
# r.squaredGLMM(model2)
# summary(model2)
#
# anova(model1, model2)
#
# print('model3')
# model3 <- lmer(formula = log_global_sales
#                ~ platform_company + genre + rating_everyone
#                + (1 | publisher),
#                data = sample_data)
# r.squaredGLMM(model3)
# summary(model3)
#
# anova(model2, model3)
#
# print('model4')
# model4 <- lmer(formula = log_global_sales
#                ~ platform_company + genre + rating_everyone
#                + critic_score_c
#                + (1 | publisher),
#                data = sample_data)
# r.squaredGLMM(model4)
# summary(model4)
#
# anova(model3, model4)
#
# print('model5')
# model5 <- lmer(formula = log_global_sales
#                ~ platform_company + genre + rating_everyone
#                + critic_score_c + critic_count_c
#                + (1 | publisher),
#                data = sample_data)
# r.squaredGLMM(model5)
# summary(model5)
#
# anova(model4, model5)
#
# print('model6')
# model6 <- lmer(formula = log_global_sales
#                ~ platform_company + genre + rating_everyone
#                + critic_score_c + critic_count_c + user_score_c
#                + (1 | publisher),
#                data = sample_data)
# r.squaredGLMM(model6)
# summary(model6)
#
# anova(model5, model6)
#
# print('model7')
# model7 <- lmer(formula = log_global_sales
#                ~ platform_company + genre + rating_everyone
#                + critic_score_c + critic_count_c + user_score_c + user_count_c
#                + (1 | publisher),
#                data = sample_data)
# r.squaredGLMM(model7)
# summary(model7)
#
# anova(model6, model7)
#
# print('model8')
# model8 <- lmer(formula = log_global_sales
#                ~ platform_company + genre + rating_everyone
#                + critic_score_c + critic_count_c + user_count_c
#                + platform_company:rating_everyone
#                + (1 | publisher),
#                data = sample_data)
# r.squaredGLMM(model8)
# summary(model8)
#
# anova(model7, model8)
#
# print('model9')
# model9 <- lmer(formula = log_global_sales
#                ~ platform_company + genre + rating_everyone
#                + critic_score_c + critic_count_c + user_count_c
#                + platform_company:rating_everyone + platform_company:genre
#                + (1 | publisher),
#                data = sample_data)
# r.squaredGLMM(model9)
# summary(model9)
#
# anova(model8, model9)
#
# print('model10')
# model10 <- lmer(formula = log_global_sales
#                 ~ platform_company + genre + rating_everyone
#                 + critic_score_c + critic_count_c + user_count_c
#                 + platform_company:rating_everyone + platform_company:genre + genre:rating_everyone
#                 + (1 | publisher),
#                 data = sample_data)
# r.squaredGLMM(model10)
# summary(model10)
#
# anova(model9, model10)
#
# print('full_model')
full_model <- lmer(formula = log_global_sales
~ platform_company + genre + rating_everyone
+ critic_score_c + critic_count_c + user_count_c
+ platform_company:rating_everyone + genre:rating_everyone
+ (1 | publisher),
data = sample_data)
r.squaredGLMM(full_model)
summary(full_model)
# anova(model10, full_model)
confints <- confint(full_model)
confints <- confints[3:37,]
r.squaredGLMM(full_model)
anova(model10, full_model)
